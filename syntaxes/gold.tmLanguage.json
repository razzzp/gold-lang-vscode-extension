{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Gold",
	"patterns": [
		{ "include": "#keywords"},
		{ "include": "#strings" },
		{ "include": "#comments"},
		{ "include": "#constant-boolean"},
		{ "include": "#constant-nil"},
		{ "include": "#constant-character"},
		{ "include": "#constant-integer"},
		{ "include": "#constant-decimal"},
		{ "include": "#class"}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.gold",
				"match": "\\b(if|while|for|return)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.single.gold",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.single-quote.escape.gold",
					"match": "''"
				}
			]
		},
		"comments": {
			"name": "comment.line",
			"begin": ";",
			"end": "[\n\r]"
		},
		"constant-boolean":{
			"name": "constant.language.boolean",
			"match": "\\b(true|True|false|False)\\b"
		},
		"constant-nil":{
			"name": "constant.language.nil",
			"match": "\\b(nil|Nil)\\b"
		},
		"constant-integer":{
			"name": "constant.numeric.integer",
			"match": "\\b\\d+\\b"
		},
		"constant-decimal":{
			"name": "constant.numeric.decimal",
			"match": "\\b\\d+(\\.\\d*)?\\b"
		},
		"constant-character":{
			"name": "constant.character",
			"match": "#\\d{1,3}\\b"
		},
		"declaration": {
			"patterns": [
				{"include": "#class-declaration"},
				{"include": "#function-declaration"}
			]
		},
		"class-declaration":{
			"name": "meta.class",
			"comment": "Labels class name and inherited class name, end impossible to match so will go to end of file",
			"begin": "class(?:\\s+([\\w]+))?(?:\\s+(?:\\(([\\w]+)\\)))?",
			"begincaptures": {
				"1": { "name": "entity.name.type.class" },
				"2": { "name": "entity.other.inherited-class"}
			},
			"patterns": [
				{"include": "#function-declaration"},
				{"include": "#keywords-storage"}
				
			],
			"end": "(?=e)b"
		},
		"function-declaration":{
			"name": "meta.function",
			"comment": "",
			"begin": "(function)\\s+([\\w]+)(\\s*\\(.*\\))?\\s+return(\\s+[\\w]+)(\\s+[\\w]+)?(\\s+[\\w]+)?",
			"beginCaptures": {
				"1": { "name": "storage.type.function" }
			},
			"end": "endFunc"
		},
		
		"keywords-storage": {
			"name": "storage.type.function",
			"match": "function|procedure"
		}
	},
	"scopeName": "source.gold"
}